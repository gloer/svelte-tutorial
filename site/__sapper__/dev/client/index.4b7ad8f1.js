import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, c as create_slot, v as validate_slots, e as element, a as claim_element, b as children, f as detach_dev, g as attr_dev, h as add_location, j as insert_dev, u as update_slot, t as transition_in, k as transition_out, l as create_component, m as claim_component, n as mount_component, o as destroy_component, p as space, q as claim_space, r as set_style, w as append_dev, x as add_render_callback, y as listen_dev, z as noop, A as text, B as claim_text, C as set_data_dev, D as validate_each_argument, E as empty, F as destroy_each, G as onMount, H as binding_callbacks, I as group_outros, J as check_outros, K as query_selector_all } from './client.2d8aba47.js';
import './Repl.246365e1.js';
import './examples.83e383fd.js';
import './InputOutputToggle.8772f8ec.js';
import { R as ReplWidget } from './ReplWidget.883381a2.js';

/* node_modules/@sveltejs/site-kit/components/Section.svelte generated by Svelte v3.31.0 */

const file = "node_modules/@sveltejs/site-kit/components/Section.svelte";

function create_fragment(ctx) {
	let section;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	const block = {
		c: function create() {
			section = element("section");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			if (default_slot) default_slot.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section, "class", "svelte-1ojx4sy");
			add_location(section, file, 13, 0, 176);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);

			if (default_slot) {
				default_slot.m(section, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Section", slots, ['default']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Section> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	return [$$scope, slots];
}

class Section extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Section",
			options,
			id: create_fragment.name
		});
	}
}

/* node_modules/@sveltejs/site-kit/components/Blurb.svelte generated by Svelte v3.31.0 */
const file$1 = "node_modules/@sveltejs/site-kit/components/Blurb.svelte";
const get_how_slot_changes = dirty => ({});
const get_how_slot_context = ctx => ({});
const get_what_slot_changes = dirty => ({});
const get_what_slot_context = ctx => ({});
const get_three_slot_changes = dirty => ({});
const get_three_slot_context = ctx => ({});
const get_two_slot_changes = dirty => ({});
const get_two_slot_context = ctx => ({});
const get_one_slot_changes = dirty => ({});
const get_one_slot_context = ctx => ({});

// (137:0) <Section>
function create_default_slot(ctx) {
	let div5;
	let div0;
	let t0;
	let div1;
	let t1;
	let div2;
	let t2;
	let div3;
	let t3;
	let div4;
	let current;
	const one_slot_template = /*#slots*/ ctx[0].one;
	const one_slot = create_slot(one_slot_template, ctx, /*$$scope*/ ctx[1], get_one_slot_context);
	const two_slot_template = /*#slots*/ ctx[0].two;
	const two_slot = create_slot(two_slot_template, ctx, /*$$scope*/ ctx[1], get_two_slot_context);
	const three_slot_template = /*#slots*/ ctx[0].three;
	const three_slot = create_slot(three_slot_template, ctx, /*$$scope*/ ctx[1], get_three_slot_context);
	const what_slot_template = /*#slots*/ ctx[0].what;
	const what_slot = create_slot(what_slot_template, ctx, /*$$scope*/ ctx[1], get_what_slot_context);
	const how_slot_template = /*#slots*/ ctx[0].how;
	const how_slot = create_slot(how_slot_template, ctx, /*$$scope*/ ctx[1], get_how_slot_context);

	const block = {
		c: function create() {
			div5 = element("div");
			div0 = element("div");
			if (one_slot) one_slot.c();
			t0 = space();
			div1 = element("div");
			if (two_slot) two_slot.c();
			t1 = space();
			div2 = element("div");
			if (three_slot) three_slot.c();
			t2 = space();
			div3 = element("div");
			if (what_slot) what_slot.c();
			t3 = space();
			div4 = element("div");
			if (how_slot) how_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			var div0_nodes = children(div0);
			if (one_slot) one_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div5_nodes);
			div1 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);
			if (two_slot) two_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div5_nodes);
			div2 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			var div2_nodes = children(div2);
			if (three_slot) three_slot.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			t2 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			var div3_nodes = children(div3);
			if (what_slot) what_slot.l(div3_nodes);
			div3_nodes.forEach(detach_dev);
			t3 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			var div4_nodes = children(div4);
			if (how_slot) how_slot.l(div4_nodes);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "box svelte-1377vhn");
			set_style(div0, "background", "var(--prime)");
			set_style(div0, "grid-area", "one");
			add_location(div0, file$1, 138, 2, 2135);
			attr_dev(div1, "class", "box svelte-1377vhn");
			set_style(div1, "background", "var(--flash)");
			set_style(div1, "grid-area", "two");
			add_location(div1, file$1, 142, 2, 2243);
			attr_dev(div2, "class", "box svelte-1377vhn");
			set_style(div2, "background", "var(--second)");
			set_style(div2, "grid-area", "three");
			add_location(div2, file$1, 146, 2, 2351);
			attr_dev(div3, "class", "what svelte-1377vhn");
			set_style(div3, "grid-area", "what");
			add_location(div3, file$1, 150, 2, 2464);
			attr_dev(div4, "class", "how svelte-1377vhn");
			set_style(div4, "grid-area", "how");
			add_location(div4, file$1, 154, 2, 2549);
			attr_dev(div5, "class", "blurb svelte-1377vhn");
			add_location(div5, file$1, 137, 1, 2113);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div5, anchor);
			append_dev(div5, div0);

			if (one_slot) {
				one_slot.m(div0, null);
			}

			append_dev(div5, t0);
			append_dev(div5, div1);

			if (two_slot) {
				two_slot.m(div1, null);
			}

			append_dev(div5, t1);
			append_dev(div5, div2);

			if (three_slot) {
				three_slot.m(div2, null);
			}

			append_dev(div5, t2);
			append_dev(div5, div3);

			if (what_slot) {
				what_slot.m(div3, null);
			}

			append_dev(div5, t3);
			append_dev(div5, div4);

			if (how_slot) {
				how_slot.m(div4, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (one_slot) {
				if (one_slot.p && dirty & /*$$scope*/ 2) {
					update_slot(one_slot, one_slot_template, ctx, /*$$scope*/ ctx[1], dirty, get_one_slot_changes, get_one_slot_context);
				}
			}

			if (two_slot) {
				if (two_slot.p && dirty & /*$$scope*/ 2) {
					update_slot(two_slot, two_slot_template, ctx, /*$$scope*/ ctx[1], dirty, get_two_slot_changes, get_two_slot_context);
				}
			}

			if (three_slot) {
				if (three_slot.p && dirty & /*$$scope*/ 2) {
					update_slot(three_slot, three_slot_template, ctx, /*$$scope*/ ctx[1], dirty, get_three_slot_changes, get_three_slot_context);
				}
			}

			if (what_slot) {
				if (what_slot.p && dirty & /*$$scope*/ 2) {
					update_slot(what_slot, what_slot_template, ctx, /*$$scope*/ ctx[1], dirty, get_what_slot_changes, get_what_slot_context);
				}
			}

			if (how_slot) {
				if (how_slot.p && dirty & /*$$scope*/ 2) {
					update_slot(how_slot, how_slot_template, ctx, /*$$scope*/ ctx[1], dirty, get_how_slot_changes, get_how_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(one_slot, local);
			transition_in(two_slot, local);
			transition_in(three_slot, local);
			transition_in(what_slot, local);
			transition_in(how_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(one_slot, local);
			transition_out(two_slot, local);
			transition_out(three_slot, local);
			transition_out(what_slot, local);
			transition_out(how_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
			if (one_slot) one_slot.d(detaching);
			if (two_slot) two_slot.d(detaching);
			if (three_slot) three_slot.d(detaching);
			if (what_slot) what_slot.d(detaching);
			if (how_slot) how_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(137:0) <Section>",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let section;
	let current;

	section = new Section({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(section.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(section.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(section, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const section_changes = {};

			if (dirty & /*$$scope*/ 2) {
				section_changes.$$scope = { dirty, ctx };
			}

			section.$set(section_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(section.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(section.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(section, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Blurb", slots, ['one','two','three','what','how']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Blurb> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(1, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ Section });
	return [slots, $$scope];
}

class Blurb extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Blurb",
			options,
			id: create_fragment$1.name
		});
	}
}

/* node_modules/@sveltejs/site-kit/components/ParallaxLogo.svelte generated by Svelte v3.31.0 */

const file$2 = "node_modules/@sveltejs/site-kit/components/ParallaxLogo.svelte";

function create_fragment$2(ctx) {
	let scrolling = false;

	let clear_scrolling = () => {
		scrolling = false;
	};

	let scrolling_timeout;
	let img;
	let img_src_value;
	let mounted;
	let dispose;
	add_render_callback(/*onwindowscroll*/ ctx[3]);

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", {
				alt: true,
				src: true,
				class: true,
				style: true
			});

			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "alt", /*alt*/ ctx[1]);
			if (img.src !== (img_src_value = /*src*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "parallax svelte-1inoott");
			set_style(img, "transform", "translate(0, " + /*sy*/ ctx[2] * 0.2 + "px)");
			add_location(img, file$2, 32, 0, 400);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);

			if (!mounted) {
				dispose = listen_dev(window, "scroll", () => {
					scrolling = true;
					clearTimeout(scrolling_timeout);
					scrolling_timeout = setTimeout(clear_scrolling, 100);
					/*onwindowscroll*/ ctx[3]();
				});

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*sy*/ 4 && !scrolling) {
				scrolling = true;
				clearTimeout(scrolling_timeout);
				scrollTo(window.pageXOffset, /*sy*/ ctx[2]);
				scrolling_timeout = setTimeout(clear_scrolling, 100);
			}

			if (dirty & /*alt*/ 2) {
				attr_dev(img, "alt", /*alt*/ ctx[1]);
			}

			if (dirty & /*src*/ 1 && img.src !== (img_src_value = /*src*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*sy*/ 4) {
				set_style(img, "transform", "translate(0, " + /*sy*/ ctx[2] * 0.2 + "px)");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("ParallaxLogo", slots, []);
	let { src } = $$props;
	let { alt } = $$props;
	let sy = 0;
	const writable_props = ["src", "alt"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ParallaxLogo> was created with unknown prop '${key}'`);
	});

	function onwindowscroll() {
		$$invalidate(2, sy = window.pageYOffset);
	}

	$$self.$$set = $$props => {
		if ("src" in $$props) $$invalidate(0, src = $$props.src);
		if ("alt" in $$props) $$invalidate(1, alt = $$props.alt);
	};

	$$self.$capture_state = () => ({ src, alt, sy });

	$$self.$inject_state = $$props => {
		if ("src" in $$props) $$invalidate(0, src = $$props.src);
		if ("alt" in $$props) $$invalidate(1, alt = $$props.alt);
		if ("sy" in $$props) $$invalidate(2, sy = $$props.sy);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [src, alt, sy, onwindowscroll];
}

class ParallaxLogo extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { src: 0, alt: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ParallaxLogo",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*src*/ ctx[0] === undefined && !("src" in props)) {
			console.warn("<ParallaxLogo> was created without expected prop 'src'");
		}

		if (/*alt*/ ctx[1] === undefined && !("alt" in props)) {
			console.warn("<ParallaxLogo> was created without expected prop 'alt'");
		}
	}

	get src() {
		throw new Error("<ParallaxLogo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set src(value) {
		throw new Error("<ParallaxLogo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get alt() {
		throw new Error("<ParallaxLogo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set alt(value) {
		throw new Error("<ParallaxLogo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules/@sveltejs/site-kit/components/Hero.svelte generated by Svelte v3.31.0 */
const file$3 = "node_modules/@sveltejs/site-kit/components/Hero.svelte";

function create_fragment$3(ctx) {
	let parallaxlogo;
	let t0;
	let section;
	let img;
	let img_alt_value;
	let img_src_value;
	let t1;
	let h3;
	let t2;
	let current;

	parallaxlogo = new ParallaxLogo({
			props: {
				alt: "" + (/*title*/ ctx[0] + " logo"),
				src: /*outline*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(parallaxlogo.$$.fragment);
			t0 = space();
			section = element("section");
			img = element("img");
			t1 = space();
			h3 = element("h3");
			t2 = text(/*tagline*/ ctx[1]);
			this.h();
		},
		l: function claim(nodes) {
			claim_component(parallaxlogo.$$.fragment, nodes);
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			img = claim_element(section_nodes, "IMG", { alt: true, class: true, src: true });
			t1 = claim_space(section_nodes);
			h3 = claim_element(section_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, /*tagline*/ ctx[1]);
			h3_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "alt", img_alt_value = "" + (/*title*/ ctx[0] + " logotype"));
			attr_dev(img, "class", "logotype svelte-1u1foo2");
			if (img.src !== (img_src_value = /*logotype*/ ctx[2])) attr_dev(img, "src", img_src_value);
			add_location(img, file$3, 60, 1, 775);
			attr_dev(h3, "class", "svelte-1u1foo2");
			add_location(h3, file$3, 61, 1, 837);
			attr_dev(section, "class", "hero svelte-1u1foo2");
			add_location(section, file$3, 59, 0, 751);
		},
		m: function mount(target, anchor) {
			mount_component(parallaxlogo, target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, img);
			append_dev(section, t1);
			append_dev(section, h3);
			append_dev(h3, t2);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const parallaxlogo_changes = {};
			if (dirty & /*title*/ 1) parallaxlogo_changes.alt = "" + (/*title*/ ctx[0] + " logo");
			if (dirty & /*outline*/ 8) parallaxlogo_changes.src = /*outline*/ ctx[3];
			parallaxlogo.$set(parallaxlogo_changes);

			if (!current || dirty & /*title*/ 1 && img_alt_value !== (img_alt_value = "" + (/*title*/ ctx[0] + " logotype"))) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (!current || dirty & /*logotype*/ 4 && img.src !== (img_src_value = /*logotype*/ ctx[2])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*tagline*/ 2) set_data_dev(t2, /*tagline*/ ctx[1]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(parallaxlogo.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(parallaxlogo.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(parallaxlogo, detaching);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Hero", slots, []);
	let { title } = $$props;
	let { tagline } = $$props;
	let { logotype } = $$props;
	let { outline } = $$props;
	const writable_props = ["title", "tagline", "logotype", "outline"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Hero> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("tagline" in $$props) $$invalidate(1, tagline = $$props.tagline);
		if ("logotype" in $$props) $$invalidate(2, logotype = $$props.logotype);
		if ("outline" in $$props) $$invalidate(3, outline = $$props.outline);
	};

	$$self.$capture_state = () => ({
		ParallaxLogo,
		title,
		tagline,
		logotype,
		outline
	});

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("tagline" in $$props) $$invalidate(1, tagline = $$props.tagline);
		if ("logotype" in $$props) $$invalidate(2, logotype = $$props.logotype);
		if ("outline" in $$props) $$invalidate(3, outline = $$props.outline);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title, tagline, logotype, outline];
}

class Hero extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$3, create_fragment$3, safe_not_equal, {
			title: 0,
			tagline: 1,
			logotype: 2,
			outline: 3
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Hero",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !("title" in props)) {
			console.warn("<Hero> was created without expected prop 'title'");
		}

		if (/*tagline*/ ctx[1] === undefined && !("tagline" in props)) {
			console.warn("<Hero> was created without expected prop 'tagline'");
		}

		if (/*logotype*/ ctx[2] === undefined && !("logotype" in props)) {
			console.warn("<Hero> was created without expected prop 'logotype'");
		}

		if (/*outline*/ ctx[3] === undefined && !("outline" in props)) {
			console.warn("<Hero> was created without expected prop 'outline'");
		}
	}

	get title() {
		throw new Error("<Hero>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Hero>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tagline() {
		throw new Error("<Hero>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tagline(value) {
		throw new Error("<Hero>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get logotype() {
		throw new Error("<Hero>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set logotype(value) {
		throw new Error("<Hero>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get outline() {
		throw new Error("<Hero>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set outline(value) {
		throw new Error("<Hero>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var contributors = [
	'Rich-Harris',
	'Conduitry',
	'tanhauhau',
	'Swatinem',
	'benmccann',
	'lukeed',
	'jacwright',
	'mindrones',
	'mrkishi',
	'ekhaled',
	'EmilTholin',
	'antony',
	'pngwn',
	'zxbodya',
	'btk5h',
	'jches',
	'tivac',
	'PaulBGD',
	'GarrettGeorge',
	'btakita',
	'FWeinb',
	'dummdidumm',
	'pushkine',
	'evs-chris',
	'colincasey',
	'UnwrittenFun',
	'TehShrike',
	'jacobmischka',
	'halfnelson',
	'dependabot[bot]',
	'kaisermann',
	'Panya',
	'sanderhahn',
	'aphitiel',
	'skippednote',
	'MattiasBuelens',
	'ehrencrona',
	'dimfeld',
	'd3sandoval',
	'Harald-1',
	'Axelen123',
	'm59peacemaker',
	'taylorzane',
	'leporo',
	'sw-yx',
	'dkondrad',
	'stalkerg',
	'esarbanis',
	'hperrin',
	'LostKobrakai',
	'jesseskinner',
	'CreaturesInUnitards',
	'peopledrivemecrazy',
	'umanghome',
	'thollander',
	'emilos',
	'kevmodrome',
	'AlexxNB',
	'AlbertLucianto',
	'cristinecula',
	'MikeMatrix',
	'shinnn',
	'timhall',
	'Wolfr',
	'bre30kra69cs',
	'milahu',
	'Vages',
	'efeskucuk',
	'ItalyPaleAle',
	'andrelmlins',
	'bwbroersma',
	'clarkdo',
	'hong4rc',
	'lukasIO',
	'ElectronSz',
	'NitayRabi',
	'orta',
	'PaulMaly',
	'arxpoetica',
	'samuelgozi',
	'js2me',
	'trbrc',
	'43081j',
	'123aswin123',
	'BillyLevin',
	'dmitrykurmanov',
	'geoffrich',
	'aarongeorge',
	'arackaf',
	'industral',
	'allantito',
	'almaz-khan',
	'amwmedia',
	'benlesh',
	'bfanger',
	'CMessinides',
	'chrishelgert',
	'Crisfole',
	'funkybob',
	'membranophonist',
	'deanmcpherson',
	'neoel',
	'dreitzner',
	'SrZorro',
	'ceifa',
	'Jingmnt',
	'johnmuhl',
	'zlsa',
	'matt3224',
	'mattwolff',
	'nikku',
	'oguzhaninan',
	'PKlknr',
	'varholak-peter',
	'RobinCsl',
	'sercaneraslan',
	'kyrylkov',
	'vascoosx',
	'stephane-vanraes',
	'SteveALee',
	'Th0rN13',
	'thgh',
	'timdeschryver',
	'saibotsivad',
	'cvlab',
	'adrian5',
	'cayasso',
	'cudr',
	'dasZGFz',
	'cbolgiano',
	'gabysantosw',
	'martinandert',
	'mustafa0x',
	'elliotwaite',
	'fjorgemota',
	'vaibhav111tandon',
	'davidaq',
	'rixo',
	'vedam',
	'adamdune',
	'1wheel',
	'ooade',
	'Alaricus',
	'alexnoz',
	'Pierstoval',
	'Alex-CS',
	'aorel',
	'AlexandreCantin',
	'AlexGalays',
	'MeuhMeuh',
	'AmirHosseinHmd1',
	'Phaqui',
	'andreieftimie',
	'talklittle',
	'abruere',
	'ankeetmaini',
	'anthonylegoas',
	'aredridel',
	'arthurdenner',
	'acstll',
	'guzart',
	'el1f',
	'webdesq',
	'remotelydev',
	'benoror',
	'palewire',
	'benschac',
	'bdougherty',
	'bravecow',
	'blittle',
	'c0bra',
	'bsssshhhhhhh',
	'cj81499',
	'camjackson',
	'caroso1222',
	'InsanityOnABun',
	'Cleecanth',
	'chris-morgan',
	'caengen',
	'christianheine',
	'klaussner',
	'clebert',
	'dalemartyn',
	'damianpumar',
	'DanielPower',
	'himynameisdave',
	'davebrent',
	'davemo',
	'widyakumara',
	'dogagenc',
	'cornerfarmer',
	'StarpTech',
	'EddyVinck',
	'ematipico',
	'enstyled',
	'ericdfields',
	'skrifblokk',
	'evanmoncuso',
	'vilarfg',
	'fraserdarwent',
	'Gabswim',
	'gautamkrishnar',
	'GeopJr',
	'gonfva',
	'gka',
	'Denhai',
	'hchatel',
	'IlyaSemenov',
	'newbornfrontender',
	'irshad',
	'irshadshalu',
	'ilblog',
	'IvanSanchez',
	'j-delaney',
	'beegan',
	'jackyef',
	'lunchboxer',
	'jthegedus',
	'foucist',
	'Rukenshia',
	'JeremyBernier',
	'Joxtacy',
	'jesmrie',
	'jwicks31',
	'johman10',
	'dravog7',
	'joncfoo',
	'6eDesign',
	'Jongkeun',
	'kesne',
	'jormaj',
	'tel',
	'JounQin',
	'joaopaulobdac',
	'getkey',
	'pyoner',
	'kjj6198',
	'Karsten7',
	'khtdr',
	'netaisllc',
	'lewoudar',
	'kieranbarker',
	'Kiho',
	'atomAltera',
	'leereamsnyder',
	'div-Leo',
	'leomarquine',
	'axil',
	'itsliamegan',
	'lode',
	'lorenbrichter',
	'lguzzon',
	'lukasmoellerch',
	'lyndsysimon',
	'habibrosyad',
	'baslr',
	'MShuttle',
	'marvinhagemeister',
	'mahenrique94',
	'mdempsky',
	'MaxMilton',
	'mikedubcurry',
	'majkelbed',
	'mterczynski',
	'mkhan45',
	'mtlewis',
	'khorpy',
	'stokesman',
	'Milesq',
	'nick-vincent',
	'nicolasmgaray',
	'charpeni',
	'jacoux',
	'quantuminformation',
	'njbotkin',
	'nolanlawson',
	'Olanetsoft',
	'omeraplak',
	'oscarmattsson',
	'vp2177',
	'plmrry',
	'paulocoghi',
	'pboling',
	'blackwolf12333',
	'RAYDENFilipp',
	'michaelphipps',
	'hontas',
	'raitalharehman',
	'rajnandan1',
	'retotrinkler',
	'rihardsgravis',
	'rohanfaiyazkhan',
	'rohankokane',
	'91k',
	'rmariuzzo',
	'ryanatkn',
	'samccone',
	'hantatsang',
	'mrsauravsahu',
	'scottbedard',
	'eps1lon',
	'sebastian-stephan',
	'shakhbulatgaz',
	'lenovouser',
	'Softmus',
	'CyberAP',
	'buhrmi',
	'sdemjanenko',
	'StevenWeathers',
	'teymour-aldridge',
	'ThomasFerro',
	'tiberiuc',
	'Gohlisch',
	'timgates42',
	'tcrowe',
	'thelgevold',
	'VarunDevPro',
	'Ti-webdev',
	'venkateshwarans',
	'FlipFloop',
	'vidaren',
	'SleepyWerewolf',
	'supermooshman',
	'Vulwsztyn',
	'jakutis',
	'yesmeck',
	'Spice-Z',
	'Zachiah',
	'Zirro',
	'arggh',
	'eh-dub',
	'benib',
	'burningTyger',
	'craigglennie',
	'dmitrage',
	'fiskgrodan',
	'fivemru',
	'hmt',
	'hville',
	'igoradamenko',
	'infuzz',
	'izumiiii',
	'jamesgeorge007',
	'jasdeepgill',
	'jpsc',
	'julian-kuroiwa',
	'zhoukekestar',
	'kindoflew',
	'lonevox',
	'mattstobbs',
	'mellisdesigns',
	'munsocket',
	'nhducit',
	'nomnomnomnom',
	'orange4glace',
	'priyanjitdey94',
	'pynnl',
	'raveling',
	'rdb',
	'red-meadow',
	'rmacklin',
	'rqrqrqrq',
	'rykiplov',
	'simeydotme',
	'vlasy',
	'voldemortensen',
	'warmrobot',
	'juzhiyuan',
	'Ding-Fan'
];

/* src/routes/_components/Contributors.svelte generated by Svelte v3.31.0 */
const file$4 = "src/routes/_components/Contributors.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	child_ctx[2] = i;
	return child_ctx;
}

// (19:0) {#each contributors as contributor, i}
function create_each_block(ctx) {
	let a;
	let t0_value = /*contributor*/ ctx[0] + "";
	let t0;
	let t1;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, style: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			t1 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "class", "contributor svelte-1a6945s");
			set_style(a, "background-position", 100 * /*i*/ ctx[2] / (contributors.length - 1) + "% 0");
			attr_dev(a, "href", a_href_value = "https://github.com/" + /*contributor*/ ctx[0]);
			add_location(a, file$4, 19, 1, 390);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, t0);
			append_dev(a, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(19:0) {#each contributors as contributor, i}",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let each_1_anchor;
	let each_value = contributors;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*contributors*/ 0) {
				each_value = contributors;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Contributors", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Contributors> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ contributors });
	return [];
}

class Contributors extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contributors",
			options,
			id: create_fragment$4.name
		});
	}
}

/* src/components/IntersectionObserver.svelte generated by Svelte v3.31.0 */
const file$5 = "src/components/IntersectionObserver.svelte";
const get_default_slot_changes = dirty => ({ intersecting: dirty & /*intersecting*/ 1 });
const get_default_slot_context = ctx => ({ intersecting: /*intersecting*/ ctx[0] });

function create_fragment$5(ctx) {
	let div;
	let current;
	const default_slot_template = /*#slots*/ ctx[8].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], get_default_slot_context);

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "svelte-1c44y5p");
			add_location(div, file$5, 56, 0, 1163);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			/*div_binding*/ ctx[9](div);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope, intersecting*/ 129) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[7], dirty, get_default_slot_changes, get_default_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
			/*div_binding*/ ctx[9](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("IntersectionObserver", slots, ['default']);
	let { once = false } = $$props;
	let { top = 0 } = $$props;
	let { bottom = 0 } = $$props;
	let { left = 0 } = $$props;
	let { right = 0 } = $$props;
	let intersecting = false;
	let container;

	onMount(() => {
		if (typeof IntersectionObserver !== "undefined") {
			const rootMargin = `${bottom}px ${left}px ${top}px ${right}px`;

			const observer = new IntersectionObserver(entries => {
					$$invalidate(0, intersecting = entries[0].isIntersecting);

					if (intersecting && once) {
						observer.unobserve(container);
					}
				},
			{ rootMargin });

			observer.observe(container);
			return () => observer.unobserve(container);
		}

		function handler() {
			const bcr = container.getBoundingClientRect();
			$$invalidate(0, intersecting = bcr.bottom + bottom > 0 && bcr.right + right > 0 && bcr.top - top < window.innerHeight && bcr.left - left < window.innerWidth);

			if (intersecting && once) {
				window.removeEventListener("scroll", handler);
			}
		}

		window.addEventListener("scroll", handler);
		return () => window.removeEventListener("scroll", handler);
	});

	const writable_props = ["once", "top", "bottom", "left", "right"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<IntersectionObserver> was created with unknown prop '${key}'`);
	});

	function div_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			container = $$value;
			$$invalidate(1, container);
		});
	}

	$$self.$$set = $$props => {
		if ("once" in $$props) $$invalidate(2, once = $$props.once);
		if ("top" in $$props) $$invalidate(3, top = $$props.top);
		if ("bottom" in $$props) $$invalidate(4, bottom = $$props.bottom);
		if ("left" in $$props) $$invalidate(5, left = $$props.left);
		if ("right" in $$props) $$invalidate(6, right = $$props.right);
		if ("$$scope" in $$props) $$invalidate(7, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		onMount,
		once,
		top,
		bottom,
		left,
		right,
		intersecting,
		container
	});

	$$self.$inject_state = $$props => {
		if ("once" in $$props) $$invalidate(2, once = $$props.once);
		if ("top" in $$props) $$invalidate(3, top = $$props.top);
		if ("bottom" in $$props) $$invalidate(4, bottom = $$props.bottom);
		if ("left" in $$props) $$invalidate(5, left = $$props.left);
		if ("right" in $$props) $$invalidate(6, right = $$props.right);
		if ("intersecting" in $$props) $$invalidate(0, intersecting = $$props.intersecting);
		if ("container" in $$props) $$invalidate(1, container = $$props.container);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		intersecting,
		container,
		once,
		top,
		bottom,
		left,
		right,
		$$scope,
		slots,
		div_binding
	];
}

class IntersectionObserver_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$5, create_fragment$5, safe_not_equal, {
			once: 2,
			top: 3,
			bottom: 4,
			left: 5,
			right: 6
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "IntersectionObserver_1",
			options,
			id: create_fragment$5.name
		});
	}

	get once() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set once(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get top() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set top(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get bottom() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set bottom(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get left() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set left(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get right() {
		throw new Error("<IntersectionObserver>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set right(value) {
		throw new Error("<IntersectionObserver>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/_components/Example.svelte generated by Svelte v3.31.0 */
const file$6 = "src/routes/_components/Example.svelte";

// (45:4) {#if intersecting}
function create_if_block(ctx) {
	let replwidget;
	let current;

	replwidget = new ReplWidget({
			props: { example: /*id*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(replwidget.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(replwidget.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(replwidget, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const replwidget_changes = {};
			if (dirty & /*id*/ 1) replwidget_changes.example = /*id*/ ctx[0];
			replwidget.$set(replwidget_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(replwidget.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(replwidget.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(replwidget, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(45:4) {#if intersecting}",
		ctx
	});

	return block;
}

// (44:3) <IntersectionObserver once let:intersecting top={400}>
function create_default_slot_1(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*intersecting*/ ctx[3] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*intersecting*/ ctx[3]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*intersecting*/ 8) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(44:3) <IntersectionObserver once let:intersecting top={400}>",
		ctx
	});

	return block;
}

// (39:0) <Section>
function create_default_slot$1(ctx) {
	let div1;
	let t;
	let div0;
	let intersectionobserver;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);

	intersectionobserver = new IntersectionObserver_1({
			props: {
				once: true,
				top: 400,
				$$slots: {
					default: [
						create_default_slot_1,
						({ intersecting }) => ({ 3: intersecting }),
						({ intersecting }) => intersecting ? 8 : 0
					]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = element("div");
			if (default_slot) default_slot.c();
			t = space();
			div0 = element("div");
			create_component(intersectionobserver.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			if (default_slot) default_slot.l(div1_nodes);
			t = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(intersectionobserver.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "repl-container svelte-1t516hp");
			add_location(div0, file$6, 42, 2, 696);
			attr_dev(div1, "class", "example svelte-1t516hp");
			add_location(div1, file$6, 39, 1, 655);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			append_dev(div1, t);
			append_dev(div1, div0);
			mount_component(intersectionobserver, div0, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 4) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[2], dirty, null, null);
				}
			}

			const intersectionobserver_changes = {};

			if (dirty & /*$$scope, id, intersecting*/ 13) {
				intersectionobserver_changes.$$scope = { dirty, ctx };
			}

			intersectionobserver.$set(intersectionobserver_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			transition_in(intersectionobserver.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			transition_out(intersectionobserver.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (default_slot) default_slot.d(detaching);
			destroy_component(intersectionobserver);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$1.name,
		type: "slot",
		source: "(39:0) <Section>",
		ctx
	});

	return block;
}

function create_fragment$6(ctx) {
	let section;
	let current;

	section = new Section({
			props: {
				$$slots: { default: [create_default_slot$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(section.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(section.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(section, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const section_changes = {};

			if (dirty & /*$$scope, id*/ 5) {
				section_changes.$$scope = { dirty, ctx };
			}

			section.$set(section_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(section.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(section.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(section, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Example", slots, ['default']);
	let { id } = $$props;
	const writable_props = ["id"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Example> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("$$scope" in $$props) $$invalidate(2, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		Section,
		IntersectionObserver: IntersectionObserver_1,
		ReplWidget,
		id
	});

	$$self.$inject_state = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [id, slots, $$scope];
}

class Example extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, { id: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Example",
			options,
			id: create_fragment$6.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[0] === undefined && !("id" in props)) {
			console.warn("<Example> was created without expected prop 'id'");
		}
	}

	get id() {
		throw new Error("<Example>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<Example>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

const companies = [
	{
		href: "https://1password.com",
		src: "organisations/1password.png",
		alt: "1Password logo",
		prominent: true,
	},
	{
		href: "https://yellowpop.com",
		src: "organisations/yellowpop.svg",
		alt: "Yellowpop logo",
		prominent: true,
	},
	{
		href: "https://www.9kawin.co.th",
		src: "organisations/9kawin.svg",
		alt: "9Kawin logo",
	},
	{
		href: "https://ablab.de",
		src: "organisations/ablab.svg",
		alt: "ABLab logo",
	},
	{
		href: "https://absoluteweb.com",
		src: "organisations/absoluteweb.svg",
		alt: "Absolute Web logo",
	},
	{
		href: "https://advnz.de/",
		src: "organisations/advnz.svg",
		alt: "ADVNZ logo",
	},
	{
		href: "https://aedge.dev",
		src: "organisations/aedge.svg",
		alt: "Ædge logo",
	},
	{
		href: "https://alogus.com",
		src: "organisations/alogus.png",
		alt: "Alogus logo",
	},
	{
		href: "https://www.alaskaair.com/",
		style: "background-color: #01426a;",
		src: "organisations/alaskaairlines.svg",
		alt: "Alaska Airlines logo",
		prominent: true,
	},
	{
		href: "https://www.andcru.io",
		src: "organisations/andcru.svg",
		alt: "&Cru logo",
	},
	{
		href: "https://animus.coop",
		src: "organisations/animus-coop.svg",
		alt: "ANIMUS coop",
	},
	{
		href: "https://anoram.com",
		src: "organisations/anoram.svg",
		alt: "Anoram logo",
	},
	{
		href: "https://ant-hill.org",
		src: "organisations/anthill.svg",
		alt: "Ant Hill logo",
	},
	{
		href: "https://appditto.com",
		style: "background-color: #4c6aff;",
		src: "organisations/appditto.svg",
		alt: "Appditto logo",
	},
	{
		href: "https://avast.com",
		src: "organisations/avast.svg",
		alt: "Avast logo",
		prominent: true,
	},
	{
		href: "https://bekchy.com",
		src: "organisations/bekchy.png",
		alt: "Bekchy logo",
	},
	{
		href: "https://beyonk.com",
		src: "organisations/beyonk.svg",
		alt: "Beyonk logo",
	},
	{
		href: "https://blockvigil.com/",
		src: "organisations/blockvigil.png",
		alt: "BlockVigil logo",
	},
	{
		href: "https://www.bluehive.com",
		src: "organisations/bluehive.svg",
		alt: "BlueHive logo",
	},
	{
		href: "https://www.budibase.com",
		src: "organisations/budibase.svg",
		alt: "Budibase logo",
	},
	{
		href: "https://buydotstar.com",
		src: "organisations/buydotstar.svg",
		alt: "buy.* logo",
	},
	{
		href: "https://cashfree.com/",
		style: "background-color: #4d3475;",
		src: "organisations/cashfree.svg",
		alt: "Cashfree logo",
	},
	{
		href: "https://chess.com",
		style: "background-color: #312e2b;",
		src: "organisations/chess.svg",
		alt: "Chess.com logo",
		prominent: true,
	},
	{
		href: "https://chudovo.de",
		src: "organisations/chudovo.svg",
		alt: "chudovo",
	},
	{
		href: "https://app.cliniciannexus.com/",
		src: "organisations/cliniciannexus.png",
		alt: "Clinician Nexus logo",
	},
	{
		href: "https://cloudedots.com",
		src: "organisations/cloudedots.png",
		alt: "Cloudedots",
	},
	{
		href: "https://comigosaude.com.br",
		src: "organisations/comigo.svg",
		alt: "Comigo logo",
	},
	{
		href: "https://constellationanalytics.com",
		src: "organisations/constellation.svg",
		alt: "Constellation Analytics logo",
	},
	{
		href: "https://convincely.com/",
		src: "organisations/convincely.svg",
		alt: "Convincely logo",
	},
	{
		href: "https://cracss.com",
		style: "background-color: #ff7000;",
		src: "organisations/cracss.svg",
		alt: "craCSS.com logo",
	},
	{
		href: "https://crocodaily.com",
		src: "organisations/crocodaily.svg",
		alt: "Crocodaily",
	},
	{
		href: "https://cygnet.io",
		style: " background-color: #2481d7; ",
		src: "organisations/cygnetdigital.svg",
		alt: "Cygnet Digital logo",
	},
	{
		href: "https://www.datacenterjournal.com",
		src: "organisations/datacenterjournal.svg",
		alt: "DataCenterJournal logo",
	},
	{
		href: "https://datawrapper.de",
		src: "organisations/datawrapper.svg",
		alt: "Datawrapper logo",
	},
	{
		href: "https://daydream.software",
		src: "organisations/daydream.svg",
		alt: "Daydream logo",
	},
	{
		href: "https://db.nomics.world",
		style: "background-color: #0f272f;",
		picture: [
			{
				type: "image/webp",
				srcset: "organisations/dbnomics.webp",
			},
		],
		src: "organisations/dbnomics.jpg",
		alt: "DBNomics logo",
	},
	{
		href: "https://deck.nl",
		src: "organisations/deck.svg",
		alt: "Deck logo",
	},
	{
		href: "https://dextra.com.br/pt/",
		src: "organisations/dextra.png",
		alt: "Dextra logo",
	},
	{
		href: "https://drywa.dev",
		style: "background-color: #e95454;",
		src: "organisations/drywa.svg",
		alt: "Drywa logo",
	},
	{
		href: "https://elderguide.com/",
		src: "organisations/elderguide.svg",
		alt: "Elder Guide logo",
	},
  {
    href: "https://www.elo7.com.br",
    src: "organisations/elo7.svg",
    alt: "Elo7 logo"
  },
	{
		href: "https://www.entriwise.com/",
		src: "organisations/entriwise.png",
		alt: "Entriwise logo",
	},
	{
		href: "https://www.entur.org/about-entur/",
		style: "background-color: #191954;",
		src: "organisations/entur.svg",
		alt: "Entur logo",
	},
	{
		href: "http://www.ergonweb.de",
		src: "organisations/ergon.png",
		alt: "ERGON logo",
	},
	{
		href: "https://www.etherbit.dev/",
		src: "organisations/etherbit-dev.svg",
		alt: "Etherbit Dev logo",
	},
	{
		href: "https://www.ethi.me/",
		src: "organisations/ethi.png",
		alt: "Ethi logo",
	},
	{
		href: "https://www.extensive-it.com/appsystem",
		src: "organisations/extensive-it.svg",
		alt: "Extensive-IT logo",
	},
	{
		href: "https://www.factry.io/",
		src: "organisations/factry.png",
		alt: "Factry logo",
	},
	{
		href: "https://farmbox.ae/",
		src: "organisations/farmbox.svg",
		alt: "Farmbox logo",
	},
	{
		href: "https://filestar.com/",
		src: "organisations/filestar.svg",
		alt: "Filestar logo",
	},
	{
		href: "https://formvalidation.io",
		src: "organisations/formvalidation.svg",
		alt: "FormValidation logo",
	},
	{
		href: "https://from-now-on.com",
		src: "organisations/from-now-on.png",
		alt: "From-Now-On logo",
	},
	{
		href: "https://frontendbastards.nl",
		style: "background-color: black;",
		src: "organisations/frontend_bastards.svg",
		alt: "Frontend Bastards logo",
	},
	{
		href: "https://fusioncharts.com",
		src: "organisations/fusioncharts.svg",
		alt: "FusionCharts logo",
		prominent: true,
	},
	{
		href: "https://gilalas.com",
		src: "organisations/gilalas.svg",
		alt: "Gilalas logo",
	},
	{
		href: "https://godaddy.com",
		src: "organisations/godaddy.svg",
		alt: "GoDaddy logo",
		prominent: true,
	},
	{
		href: "https://www.gojek.io/",
		src: "organisations/gojek.svg",
		alt: "Gojek logo",
	},
	{
		href: "https://www.grainger.com",
		src: "organisations/grainger.svg",
		alt: "Grainger logo",
	},
	{
		href: "http://healthtree.org/",
		src: "organisations/healthtree.png",
		alt: "HealthTree logo",
	},
	{
		href: "https://higsch.com/",
		src: "organisations/higsch.svg",
		alt: "Higsch logo",
	},
	{
		href: "https://ifings.com",
		src: "organisations/ifings.svg",
		alt: "iFings logo",
	},
	{
		href: "https://www.ilscipio.com",
		src: "organisations/ilscipio.svg",
		alt: "Ilscipio logo",
	},
	{
		href: "https://in1.pl",
		src: "organisations/in1.svg",
		alt: "in1 logo",
	},
	{
		href: "https://www.infomax.gr",
		src: "organisations/infomax.svg",
		alt: "Infomax Insurance Brokers logo",
	},
	{
		href: "https://iota.org",
		src: "organisations/iota.svg",
		alt: "IOTA logo",
	},
	{
		href: "https://itslearning.com",
		src: "organisations/itslearning.svg",
		alt: "itslearning logo",
	},
	{
		href: "https://jacoux.com",
		src: "organisations/jacoux.png",
		alt: "Jacoux logo",
	},
	{
		href: "https://getjames.app",
		style:
			"background: linear-gradient(to right, #113B5F 0%, #0E304E 100%); background-color: #0E304E;",
		src: "organisations/james.svg",
		alt: "James App",
	},
	{
		href: "https://jdlt.co.uk",
		src: "organisations/jdlt.svg",
		alt: "JDLT logo",
	},
	{
		href: "https://jetruby.com",
		src: "organisations/jetruby.svg",
		alt: "JetRuby logo",
	},
	{
		href: "https://jingmnt.co.za",
		src: "organisations/jingmnt.png",
		alt: "Jingmnt logo",
	},
	{
		href: "https://jolojo.com/",
		style: "background-color: #000;",
		src: "organisations/jolojo.png",
		alt: "Jolojo CMS",
	},
	{
		href: "https://kitchefs.github.io",
		src: "organisations/kitchefs.svg",
		alt: "Kitchefs logo",
	},
	{
		href: "https://klicat.com",
		src: "organisations/klicat.svg",
		alt: "Klicat logo",
	},
	{
		href: "https://koj.co",
		src: "organisations/koj.svg",
		alt: "Koj",
	},
	{
		href: "https://koodoo.io",
		style: "background-color: #343463;",
		src: "organisations/koodoo.svg",
		alt: "Koodoo logo",
	},
	{
		href: "https://laybuy.com",
		src: "organisations/laybuy.svg",
		style: "background-color: #786DFF; color: white;",
		alt: "Laybuy logo",
	},
	{
		href: "https://media.lesechos.fr/infographie",
		src: "organisations/les-echos.svg",
		alt: "Les Echos",
		prominent: true,
	},
	{
		href: "https://www.lessondesk.com",
		src: "organisations/lessondesk.svg",
		alt: "Lesson Desk logo",
	},
	{
		href: "https://librelingo.app/",
		src: "organisations/librelingo.svg",
		alt: "LibreLingo",
	},
	{
		href: "https://luigi-project.io",
		src: "organisations/luigi.png",
		alt: "Luigi logo",
	},
	{
		href: "https://lyty.dev/",
		src: "organisations/lyty-dev.svg",
		alt: "Lyty.dev logo",
	},
	{
		href: "https://maddevs.io",
		src: "organisations/maddevs.svg",
		alt: "Mad Devs logo",
	},
	{
		href: "https://mail.ru",
		src: "organisations/mailru.svg",
		alt: "Mail.ru",
	},
	{
		href: "https://mentorcv.com",
		src: "organisations/mentorcv.png",
		alt: "Mentor CV logo",
	},
	{
		href: "https://www.metrovias.com.ar/",
		style: "background-color: #606463;",
		src: "organisations/metrovias.svg",
		alt: "Metrovias logo",
	},
	{
		href: "https://moselo.com",
		src: "organisations/moselo.svg",
		alt: "Moselo logo",
	},
	{
		href: "http://mustlab.ru",
		src: "organisations/mustlab.png",
		alt: "Mustlab logo",
	},
	{
		href: "https://name-coach.com",
		src: "organisations/namecoach.svg",
		alt: "NameCoach logo",
	},
	{
		href: "https://www.nesta.org.uk",
		src: "organisations/nesta.svg",
		alt: "Nesta logo",
	},
	{
		href: "https://www.nzz.ch",
		src: "organisations/nzz.svg",
		alt: "Neue Zürcher Zeitung logo",
	},
	{
		href: "https://www.nonkositelecoms.com",
		src: "organisations/nonkosi.svg",
		alt: "Nonkosi Telecoms logo",
	},
	{
		href: "https://app.nootiz.com",
		src: "organisations/nootiz.svg",
		alt: "nootiz logo",
	},
	{
		href: "https://noppo.pro",
		src: "organisations/noppo.png",
		alt: "Noppo logo",
	},
	{
		href: "https://oberonspace.xyz",
		src: "organisations/oberonspace.svg",
		alt: "OberonSPACE logo",
	},
	{
		href: "https://ofof.nl",
		src: "organisations/ofof.png",
		alt: "Ofof logo",
	},
	{
		href: "https://ogma.app",
		src: "organisations/ogma.svg",
		alt: "Ogma logo",
	},
	{
		href: "https://omniawrite.com/",
		style: "background-color: #5c3552;",
		src: "organisations/omniawrite.svg",
		alt: "OmniaWrite",
	},
	{
		href: "https://onbench.de",
		src: "organisations/onbench.png",
		alt: "onbench",
	},
	{
		href: "https://opensols.com.co/",
		src: "organisations/opensols.svg",
		alt: "OpenSols",
	},
	{
		href: "https://openstate.eu",
		src: "organisations/open-state-foundation.svg",
		alt: "Open State Foundation logo",
	},
	{
		href: "https://panascais.net",
		src: "organisations/panascais.svg",
		alt: "Panascais logo",
	},
	{
		href: "https://pankod.com",
		src: "organisations/pankod.svg",
		alt: "Pankod logo",
	},
	{
		href: "https://paperform.co",
		src: "organisations/paperform.svg",
		alt: "Paperform logo",
	},
	{
		href: "https://parthpatel.net",
		src: "organisations/parthpatel.jpg",
		alt: "Parth Patel logo",
	},
	{
		href: "https://persona.guide",
		src: "organisations/persona-guide.svg",
		alt: "Persona Guide logo",
	},
	{
		href: "https://phellowseven.com",
		src: "organisations/phellowseven.svg",
		alt: "phellow seven logo",
	},
	{
		href: "https://www.philips.co.uk",
		src: "organisations/philips.svg",
		alt: "Philips logo",
		prominent: true,
	},
	{
		href: "https://www.phonerefer.com",
		src: "organisations/phonerefer.png",
		alt: "PhoneRefer logo",
	},
	{
		href: "https://www.playpilot.com/",
		src: "organisations/playpilot-logo.svg",
		alt: "Playpilot logo",
	},
	{
		href: "https://en.plentyofplans.app",
		src: "organisations/plentyofplans.svg",
		alt: "PlentyOfPlans logo",
	},
	{
		href: "https://postlight.com/",
		src: "organisations/postlight.svg",
		alt: "Postlight logo",
	},
	{
		href: "https://www.prepleaf.com/",
		src: "organisations/prepleaf.svg",
		alt: "Prepleaf logo",
	},
	{
		href: "https://www.pureinteractive.pl",
		src: "organisations/pure_interactive.svg",
		alt: "Pure Interactive logo",
	},
	{
		href: "https://pqina.nl",
		src: "organisations/pqina.svg",
		alt: "PQINA logo",
	},
	{
		href: "https://profullstack.com",
		src: "organisations/profullstack.svg",
		alt: "Profullstack logo",
	},
	{
		href: "https://www.qconcursos.com/",
		src: "organisations/qconcursos.svg",
		alt: "Qconcursos logo",
	},
	{
		href: "https://global.rakuten.com/corp/",
		src: "organisations/rakuten.svg",
		alt: "Rakuten logo",
		prominent: true,
	},
	{
		href: "https://www.rewe-digital.com/en/",
		src: "organisations/rewe-digital-logo.svg",
		alt: "REWE digital logo",
	},
	{
		href: "https://razorpay.com",
		src: "organisations/razorpay.svg",
		alt: "Razorpay logo",
		prominent: true,
	},
	{
		href: "https://santiment.net",
		src: "organisations/santiment.svg",
		alt: "Santiment logo",
	},
	{
		href: "https://www.se.com",
		style: " background-color: #3dcd58; ",
		src: "organisations/Schneider_Electric.svg",
		alt: "Schneider Electric",
		prominent: true,
	},
	{
		href: "https://SendGrowth.com",
		src: "organisations/sendgrowth.svg",
		alt: "SendGrowth logo",
	},
	{
		href: "https://shipbit.de",
		src: "organisations/shipbit.svg",
		alt: "ShipBit logo",
	},
	{
		href: "https://skillbank.io",
		style: "background-color: #22228A;",
		src: "organisations/skillbank.svg",
		alt: "SkillBank.io",
	},
	{
		href: "https://sp.nl",
		src: "organisations/socialist-party.svg",
		alt: "Socialist Party logo",
	},
	{
		href: "https://www.softmus.com.br/",
		src: "organisations/softmus.png",
		alt: "Softmus Tecnologia logo",
	},
	{
		href: "https://sqltribe.com",
		src: "organisations/sqltribe.svg",
		alt: "SQL Tribe logo",
	},
	{
		href: "https://www.stakingrewards.com",
		src: "organisations/stakingrewards.svg",
		alt: "Staking Rewards logo",
	},
	{
		href: "https://www.steembeem.com",
		src: "organisations/steembeem.png",
		alt: "SteemBeem logo",
	},
	{
		href: "https://www.stone.co",
		src: "organisations/stone.svg",
		alt: "Stone Payments logo",
	},
	{
		href: "https://www.strixengine.com",
		src: "organisations/strixcloud.svg",
		alt: "Strix Cloud logo",
		span: "Strix Cloud",
	},
	{
		href: "https://sucuri.net",
		style: "background-color: #5d5d5d;",
		src: "organisations/sucuri.png",
		alt: "Sucuri logo",
	},
	{
		href: "https://www.superchargify.com/",
		src: "organisations/superchargify.svg",
		alt: "Superchargify logo",
	},
	{
		href: "https://swissdevjobs.ch/jobs/JavaScript/All",
		style: "background-color: #1776d2;",
		src: "organisations/swissdev-javascript-jobs.png",
		alt: "SwissDev JavaScript Jobs",
	},
	{
		href: "https://nytimes.com",
		src: "organisations/nyt.svg",
		alt: "The New York Times logo",
		prominent: true,
	},
	{
		href: "https://www.techempower.com",
		src: "organisations/techempower.svg",
		alt: "TechEmpower logo",
	},
	{
		href: "https://that.us",
		src: "organisations/THAT-Full-Wide.svg",
		alt: "THAT Conference logo",
	},
	{
		href: "https://tsh.io",
		src: "organisations/tsh.svg",
		alt: "The Software House logo",
	},
	{
		href: "https://thunderdome.dev",
		src: "organisations/thunderdome.svg",
		alt: "Thunderdome logo",
	},
	{
		href: "https://m.tokopedia.com",
		src: "organisations/tokopedia.svg",
		alt: "Tokopedia logo",
	},
	{
		href: "https://tt.edu.au",
		src: "organisations/tradie-training.png",
		alt: "Tradie Training logo",
	},
	{
		href: "https://vipfy.store",
		src: "organisations/VIPFY.svg",
		alt: "VIPFY logo",
	},
	{
		href: "https://vrstugan.se",
		style: "background-color: #0f1f4c;",
		src: "organisations/vrstugan.svg",
		alt: "VRstugan logo",
	},
	{
		href: "https://wait.nu",
		style: "background-color: #00152A;",
		src: "organisations/wait.svg",
		alt: "Wait",
	},
	{
		href: "https://webdesq.net",
		src: "organisations/webdesq.svg",
		alt: "Webdesq logo",
	},
	{
		href: "https://wiresecure.com/",
		src: "organisations/wiresecure.svg",
		alt: "WireSecure logo",
	},
	{
		href: "https://zeo.org/tr/",
		src: "organisations/zeoagency.svg",
		alt: "Zeo Agency logo",
	},
	{
		href: "https://zevvle.com/",
		src: "organisations/zevvle.svg",
		alt: "Zevvle logo",
	},
	{
		href: "https://gbit.lt/",
		src: "organisations/gbit-logo.svg",
		alt: "Gbit",
	},
	{
		href: "https://www.redlabelabrasives.com/",
		src: "organisations/red-label-logo.png",
		alt: "Red Label Abrasives",
	},
	{
		href: "https://www.fibretiger.co.za",
		src: "organisations/fibre-tiger.png",
		alt: "Fibre Tiger",
	},
	{
		href: "https://budgetbranders.com/",
		src: "organisations/budget-branders-logo.svg",
		alt: "Budget Branders",
	},
	{
		href: "https://cakcuk.io",
		src: "organisations/cakcuk.svg",
		alt: "Cakcuk logo",
	},
	{
		href: "https://sel-home.us",
		src: "organisations/sel_home.png",
		alt: "Sel home",
	},
	{
		href: "https://gieson.com/Library/projects/utilities/timetrek/",
		style: "background-color:#4774b3;",
		src: "organisations/gieson.svg",
		alt: "Gieson TimeTrek Logo",
	},
	{
		href: "https://alphaweb.gap.im",
		src: "organisations/gap.png",
		alt: "Gap Messenger",
	},
	{
		href: "https://zencity.io",
		src: "organisations/zencity.svg",
		alt: "Zencity",
	},
	{
		href: "https://strollyn.com",
		src: "organisations/strollyn.svg",
		alt: "STROLLÿN",
	},
	{
		href: "http://agileleaf.com",
		src: "organisations/agileleaf.svg",
		alt: "Agile Leaf",
	},
	{
		href: "https://tproger.ru",
		src: "organisations/tproger.svg",
		alt: "Tproger («Типичный программист»)",
	},
	{
		href: "https://transloadit.com",
		src: "organisations/transloadit.svg",
		alt: "Transloadit",
	},
	{
		href: "https://www.creative-tim.com/templates/svelte?ref=svelte.dev",
		src: "organisations/ct-logo-text-black.png",
		alt: "Creative Tim",
	},
	{
		href: "https://turgensec.com",
		src: "organisations/TurgenSec.png",
		alt: "TurgenSec",
	},
	{
		href: "https://alextomas.com",
		src: "organisations/alextomas.png",
		alt: "Alex Tomás - Frontend developer",
	},
	{
		href: "https://emakinacee.com/",
		style: "background-color:#000;",
		src: "organisations/emakina-cee.svg",
		alt: "Emakina CEE Logo",
	},
	{
		href: "https://www.ibm.com/",
		src: "organisations/ibm.svg",
		alt: "IBM logo",
		prominent: true,
	},
	{
		href: "https://postis.eu/",
		src: "organisations/postis.svg",
		alt: "Postis",
	},
	{
		href: "https://lost.report/",
		src: "organisations/lostreport.svg",
		alt: "Lost.Report Task Tracker"
	},
	{
		href: "https://www.enablerr.ch/",
		src: "organisations/enablerr.png",
		alt: "enablerr by pier4all"
	},
	{
		href: "https://thalasseus.com/",
		style: "background-color: #000",
		src: "organisations/thalasseus.svg",
		alt: "Thalasseus logo"
	},
	{
		href: "https://about.smartnews.com/en/",
		src: "organisations/smartnews.png",
		alt: "SmartNews"
	},
	{
		href: "https://filevine.com/",
		src: "organisations/filevine.svg",
		alt: "Filevine"
	},
];

/* src/routes/_components/WhosUsingSvelte.svelte generated by Svelte v3.31.0 */
const file$7 = "src/routes/_components/WhosUsingSvelte.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i].href;
	child_ctx[8] = list[i].src;
	child_ctx[9] = list[i].alt;
	child_ctx[10] = list[i].style;
	child_ctx[11] = list[i].picture;
	child_ctx[12] = list[i].span;
	child_ctx[14] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[15] = list[i].type;
	child_ctx[16] = list[i].srcset;
	return child_ctx;
}

// (63:2) {#if index < limitCompanies}
function create_if_block$1(ctx) {
	let a;
	let a_href_value;
	let a_style_value;

	function select_block_type(ctx, dirty) {
		if (/*picture*/ ctx[11]) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			a = element("a");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", {
				target: true,
				rel: true,
				href: true,
				style: true,
				class: true
			});

			var a_nodes = children(a);
			if_block.l(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "target", "_blank");
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "href", a_href_value = /*href*/ ctx[7]);
			attr_dev(a, "style", a_style_value = /*style*/ ctx[10] || "");
			attr_dev(a, "class", "svelte-17pslwe");
			add_location(a, file$7, 63, 3, 1165);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			if_block.m(a, null);
		},
		p: function update(ctx, dirty) {
			if_block.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(63:2) {#if index < limitCompanies}",
		ctx
	});

	return block;
}

// (76:4) {:else}
function create_else_block(ctx) {
	let img;
	let img_src_value;
	let img_alt_value;
	let t;
	let if_block_anchor;
	let if_block = /*span*/ ctx[12] && create_if_block_2(ctx);

	const block = {
		c: function create() {
			img = element("img");
			t = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", {
				src: true,
				alt: true,
				loading: true,
				class: true
			});

			t = claim_space(nodes);
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*src*/ ctx[8])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*alt*/ ctx[9]);
			attr_dev(img, "loading", "lazy");
			attr_dev(img, "class", "svelte-17pslwe");
			add_location(img, file$7, 76, 5, 1436);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
			insert_dev(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*span*/ ctx[12]) if_block.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
			if (detaching) detach_dev(t);
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(76:4) {:else}",
		ctx
	});

	return block;
}

// (69:4) {#if picture}
function create_if_block_1(ctx) {
	let picture;
	let t;
	let img;
	let img_src_value;
	let img_alt_value;
	let each_value_1 = /*picture*/ ctx[11];
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const block = {
		c: function create() {
			picture = element("picture");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			picture = claim_element(nodes, "PICTURE", { class: true });
			var picture_nodes = children(picture);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(picture_nodes);
			}

			t = claim_space(picture_nodes);

			img = claim_element(picture_nodes, "IMG", {
				src: true,
				alt: true,
				loading: true,
				class: true
			});

			picture_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*src*/ ctx[8])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*alt*/ ctx[9]);
			attr_dev(img, "loading", "lazy");
			attr_dev(img, "class", "svelte-17pslwe");
			add_location(img, file$7, 73, 6, 1370);
			attr_dev(picture, "class", "svelte-17pslwe");
			add_location(picture, file$7, 69, 5, 1268);
		},
		m: function mount(target, anchor) {
			insert_dev(target, picture, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(picture, null);
			}

			append_dev(picture, t);
			append_dev(picture, img);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*sortedCompanies*/ 4) {
				each_value_1 = /*picture*/ ctx[11];
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(picture, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(picture);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(69:4) {#if picture}",
		ctx
	});

	return block;
}

// (78:5) {#if span}
function create_if_block_2(ctx) {
	let span;
	let t_value = /*span*/ ctx[12] + "";
	let t;

	const block = {
		c: function create() {
			span = element("span");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			var span_nodes = children(span);
			t = claim_text(span_nodes, t_value);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span, file$7, 78, 6, 1491);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			append_dev(span, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(78:5) {#if span}",
		ctx
	});

	return block;
}

// (71:6) {#each picture as {type, srcset}}
function create_each_block_1(ctx) {
	let source;
	let source_type_value;
	let source_srcset_value;

	const block = {
		c: function create() {
			source = element("source");
			this.h();
		},
		l: function claim(nodes) {
			source = claim_element(nodes, "SOURCE", { type: true, srcset: true });
			this.h();
		},
		h: function hydrate() {
			attr_dev(source, "type", source_type_value = /*type*/ ctx[15]);
			attr_dev(source, "srcset", source_srcset_value = /*srcset*/ ctx[16]);
			add_location(source, file$7, 71, 7, 1325);
		},
		m: function mount(target, anchor) {
			insert_dev(target, source, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(source);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(71:6) {#each picture as {type, srcset}}",
		ctx
	});

	return block;
}

// (62:1) {#each sortedCompanies as {href, src, alt, style, picture, span}
function create_each_block$1(ctx) {
	let if_block_anchor;
	let if_block = /*index*/ ctx[14] < /*limitCompanies*/ ctx[0] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*index*/ ctx[14] < /*limitCompanies*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(62:1) {#each sortedCompanies as {href, src, alt, style, picture, span}",
		ctx
	});

	return block;
}

function create_fragment$7(ctx) {
	let div;
	let t0;
	let button;
	let span0;
	let t1;
	let t2_value = (/*allCompaniesShown*/ ctx[1] ? "less" : "more") + "";
	let t2;
	let t3;
	let a;
	let span1;
	let t4;
	let mounted;
	let dispose;
	let each_value = /*sortedCompanies*/ ctx[2];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t0 = space();
			button = element("button");
			span0 = element("span");
			t1 = text("show ");
			t2 = text(t2_value);
			t3 = space();
			a = element("a");
			span1 = element("span");
			t4 = text("+ your company?");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t0 = claim_space(div_nodes);
			button = claim_element(div_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			span0 = claim_element(button_nodes, "SPAN", {});
			var span0_nodes = children(span0);
			t1 = claim_text(span0_nodes, "show ");
			t2 = claim_text(span0_nodes, t2_value);
			span0_nodes.forEach(detach_dev);
			button_nodes.forEach(detach_dev);
			t3 = claim_space(div_nodes);

			a = claim_element(div_nodes, "A", {
				target: true,
				rel: true,
				href: true,
				class: true
			});

			var a_nodes = children(a);
			span1 = claim_element(a_nodes, "SPAN", {});
			var span1_nodes = children(span1);
			t4 = claim_text(span1_nodes, "+ your company?");
			span1_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span0, file$7, 87, 2, 1620);
			attr_dev(button, "class", "add-yourself svelte-17pslwe");
			add_location(button, file$7, 84, 1, 1558);
			add_location(span1, file$7, 94, 2, 1848);
			attr_dev(a, "target", "_blank");
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "href", "https://github.com/sveltejs/community/blob/master/whos-using-svelte/WhosUsingSvelte.js");
			attr_dev(a, "class", "add-yourself svelte-17pslwe");
			add_location(a, file$7, 89, 1, 1688);
			attr_dev(div, "class", "logos svelte-17pslwe");
			add_location(div, file$7, 60, 0, 1037);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t0);
			append_dev(div, button);
			append_dev(button, span0);
			append_dev(span0, t1);
			append_dev(span0, t2);
			append_dev(div, t3);
			append_dev(div, a);
			append_dev(a, span1);
			append_dev(span1, t4);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*handleShowMore*/ ctx[3], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*sortedCompanies, limitCompanies*/ 5) {
				each_value = /*sortedCompanies*/ ctx[2];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, t0);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*allCompaniesShown*/ 2 && t2_value !== (t2_value = (/*allCompaniesShown*/ ctx[1] ? "less" : "more") + "")) set_data_dev(t2, t2_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const _baseNumber = 35;

function instance$7($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("WhosUsingSvelte", slots, []);
	const randomizer = ({ prominent }) => Math.random() + !!prominent;
	const doSort = (a, b) => randomizer(b) - randomizer(a);
	const sortedCompanies = companies.sort(doSort);
	const companiesCount = companies.length;
	let limitCompanies = _baseNumber;

	const handleShowMore = () => {
		if (allCompaniesShown) {
			$$invalidate(0, limitCompanies = _baseNumber);
			return;
		}

		$$invalidate(0, limitCompanies += _baseNumber);
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<WhosUsingSvelte> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		companies,
		randomizer,
		doSort,
		sortedCompanies,
		companiesCount,
		_baseNumber,
		limitCompanies,
		handleShowMore,
		allCompaniesShown
	});

	$$self.$inject_state = $$props => {
		if ("limitCompanies" in $$props) $$invalidate(0, limitCompanies = $$props.limitCompanies);
		if ("allCompaniesShown" in $$props) $$invalidate(1, allCompaniesShown = $$props.allCompaniesShown);
	};

	let allCompaniesShown;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*limitCompanies*/ 1) {
			 $$invalidate(1, allCompaniesShown = limitCompanies >= companiesCount);
		}
	};

	return [limitCompanies, allCompaniesShown, sortedCompanies, handleShowMore];
}

class WhosUsingSvelte extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "WhosUsingSvelte",
			options,
			id: create_fragment$7.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.31.0 */
const file$8 = "src/routes/index.svelte";

// (46:1) <a href="blog/write-less-code" slot="one">
function create_one_slot(ctx) {
	let a;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let t3;
	let span;
	let t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("Write less code");
			t1 = space();
			p = element("p");
			t2 = text("Build boilerplate-free components using languages you already know — HTML, CSS and JavaScript");
			t3 = space();
			span = element("span");
			t4 = text("learn more");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true });
			var a_nodes = children(a);
			h2 = claim_element(a_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Write less code");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			p = claim_element(a_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Build boilerplate-free components using languages you already know — HTML, CSS and JavaScript");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t4 = claim_text(span_nodes, "learn more");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$8, 46, 2, 1260);
			add_location(p, file$8, 47, 2, 1287);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$8, 49, 2, 1391);
			attr_dev(a, "href", "blog/write-less-code");
			attr_dev(a, "slot", "one");
			add_location(a, file$8, 45, 1, 1215);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_one_slot.name,
		type: "slot",
		source: "(46:1) <a href=\\\"blog/write-less-code\\\" slot=\\\"one\\\">",
		ctx
	});

	return block;
}

// (53:1) <a href="blog/virtual-dom-is-pure-overhead" slot="two">
function create_two_slot(ctx) {
	let a;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let t3;
	let span;
	let t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("No virtual DOM");
			t1 = space();
			p = element("p");
			t2 = text("Svelte compiles your code to tiny, framework-less vanilla JS — your app starts fast and stays fast");
			t3 = space();
			span = element("span");
			t4 = text("learn more");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true });
			var a_nodes = children(a);
			h2 = claim_element(a_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "No virtual DOM");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			p = claim_element(a_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Svelte compiles your code to tiny, framework-less vanilla JS — your app starts fast and stays fast");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t4 = claim_text(span_nodes, "learn more");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$8, 53, 2, 1500);
			add_location(p, file$8, 54, 2, 1526);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$8, 56, 2, 1635);
			attr_dev(a, "href", "blog/virtual-dom-is-pure-overhead");
			attr_dev(a, "slot", "two");
			add_location(a, file$8, 52, 1, 1442);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_two_slot.name,
		type: "slot",
		source: "(53:1) <a href=\\\"blog/virtual-dom-is-pure-overhead\\\" slot=\\\"two\\\">",
		ctx
	});

	return block;
}

// (60:1) <a href="blog/svelte-3-rethinking-reactivity" slot="three">
function create_three_slot(ctx) {
	let a;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let t3;
	let span;
	let t4;

	const block = {
		c: function create() {
			a = element("a");
			h2 = element("h2");
			t0 = text("Truly reactive");
			t1 = space();
			p = element("p");
			t2 = text("No more complex state management libraries — Svelte brings reactivity to JavaScript itself");
			t3 = space();
			span = element("span");
			t4 = text("learn more");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, slot: true });
			var a_nodes = children(a);
			h2 = claim_element(a_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Truly reactive");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			p = claim_element(a_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "No more complex state management libraries — Svelte brings reactivity to JavaScript itself");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t4 = claim_text(span_nodes, "learn more");
			span_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$8, 60, 2, 1748);
			add_location(p, file$8, 61, 2, 1774);
			attr_dev(span, "class", "learn-more");
			add_location(span, file$8, 63, 2, 1875);
			attr_dev(a, "href", "blog/svelte-3-rethinking-reactivity");
			attr_dev(a, "slot", "three");
			add_location(a, file$8, 59, 1, 1686);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, h2);
			append_dev(h2, t0);
			append_dev(a, t1);
			append_dev(a, p);
			append_dev(p, t2);
			append_dev(a, t3);
			append_dev(a, span);
			append_dev(span, t4);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_three_slot.name,
		type: "slot",
		source: "(60:1) <a href=\\\"blog/svelte-3-rethinking-reactivity\\\" slot=\\\"three\\\">",
		ctx
	});

	return block;
}

// (67:1) <div class="description" slot="what">
function create_what_slot(ctx) {
	let div;
	let p0;
	let t0;
	let em0;
	let t1;
	let t2;
	let em1;
	let t3;
	let t4;
	let t5;
	let p1;
	let t6;
	let t7;
	let p2;
	let a;
	let t8;
	let t9;

	const block = {
		c: function create() {
			div = element("div");
			p0 = element("p");
			t0 = text("Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the ");
			em0 = element("em");
			t1 = text("browser");
			t2 = text(", Svelte shifts that work into a ");
			em1 = element("em");
			t3 = text("compile step");
			t4 = text(" that happens when you build your app.");
			t5 = space();
			p1 = element("p");
			t6 = text("Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.");
			t7 = space();
			p2 = element("p");
			a = element("a");
			t8 = text("Read the introductory blog post");
			t9 = text(" to learn more.");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, slot: true });
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the ");
			em0 = claim_element(p0_nodes, "EM", {});
			var em0_nodes = children(em0);
			t1 = claim_text(em0_nodes, "browser");
			em0_nodes.forEach(detach_dev);
			t2 = claim_text(p0_nodes, ", Svelte shifts that work into a ");
			em1 = claim_element(p0_nodes, "EM", {});
			var em1_nodes = children(em1);
			t3 = claim_text(em1_nodes, "compile step");
			em1_nodes.forEach(detach_dev);
			t4 = claim_text(p0_nodes, " that happens when you build your app.");
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", {});
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, "Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.");
			p1_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", {});
			var p2_nodes = children(p2);
			a = claim_element(p2_nodes, "A", { href: true });
			var a_nodes = children(a);
			t8 = claim_text(a_nodes, "Read the introductory blog post");
			a_nodes.forEach(detach_dev);
			t9 = claim_text(p2_nodes, " to learn more.");
			p2_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(em0, file$8, 67, 150, 2114);
			add_location(em1, file$8, 67, 199, 2163);
			add_location(p0, file$8, 67, 2, 1966);
			add_location(p1, file$8, 69, 2, 2230);
			attr_dev(a, "href", "blog/svelte-3-rethinking-reactivity");
			add_location(a, file$8, 71, 5, 2384);
			add_location(p2, file$8, 71, 2, 2381);
			attr_dev(div, "class", "description");
			attr_dev(div, "slot", "what");
			add_location(div, file$8, 66, 1, 1926);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, p0);
			append_dev(p0, t0);
			append_dev(p0, em0);
			append_dev(em0, t1);
			append_dev(p0, t2);
			append_dev(p0, em1);
			append_dev(em1, t3);
			append_dev(p0, t4);
			append_dev(div, t5);
			append_dev(div, p1);
			append_dev(p1, t6);
			append_dev(div, t7);
			append_dev(div, p2);
			append_dev(p2, a);
			append_dev(a, t8);
			append_dev(p2, t9);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_what_slot.name,
		type: "slot",
		source: "(67:1) <div class=\\\"description\\\" slot=\\\"what\\\">",
		ctx
	});

	return block;
}

// (75:1) <div style="grid-area: start; display: flex; flex-direction: column; min-width: 0" slot="how">
function create_how_slot(ctx) {
	let div;
	let pre;
	let t0;
	let a0;
	let t1;
	let t2;
	let span0;
	let t3;
	let a1;
	let t4;
	let t5;
	let span1;
	let t6;
	let a2;
	let t7;
	let t8;
	let t9;
	let span2;
	let t10;
	let t11;
	let t12;
	let p0;
	let t13;
	let a3;
	let t14;
	let t15;
	let t16;
	let p1;
	let a4;
	let t17;

	const block = {
		c: function create() {
			div = element("div");
			pre = element("pre");
			t0 = text("npx degit ");
			a0 = element("a");
			t1 = text("sveltejs/template");
			t2 = text(" my-svelte-project\n");
			span0 = element("span");
			t3 = text("# or download and extract ");
			a1 = element("a");
			t4 = text("this .zip file");
			t5 = text("\ncd my-svelte-project\n");
			span1 = element("span");
			t6 = text("# to use ");
			a2 = element("a");
			t7 = text("TypeScript");
			t8 = text(" run:");
			t9 = text("\n");
			span2 = element("span");
			t10 = text("# node scripts/setupTypeScript.js");
			t11 = text("\n\nnpm install\nnpm run dev");
			t12 = space();
			p0 = element("p");
			t13 = text("See the ");
			a3 = element("a");
			t14 = text("quickstart guide");
			t15 = text(" for more information.");
			t16 = space();
			p1 = element("p");
			a4 = element("a");
			t17 = text("Learn Svelte");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { style: true, slot: true });
			var div_nodes = children(div);
			pre = claim_element(div_nodes, "PRE", { class: true, style: true });
			var pre_nodes = children(pre);
			t0 = claim_text(pre_nodes, "npx degit ");
			a0 = claim_element(pre_nodes, "A", { href: true, style: true });
			var a0_nodes = children(a0);
			t1 = claim_text(a0_nodes, "sveltejs/template");
			a0_nodes.forEach(detach_dev);
			t2 = claim_text(pre_nodes, " my-svelte-project\n");
			span0 = claim_element(pre_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t3 = claim_text(span0_nodes, "# or download and extract ");
			a1 = claim_element(span0_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t4 = claim_text(a1_nodes, "this .zip file");
			a1_nodes.forEach(detach_dev);
			span0_nodes.forEach(detach_dev);
			t5 = claim_text(pre_nodes, "\ncd my-svelte-project\n");
			span1 = claim_element(pre_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t6 = claim_text(span1_nodes, "# to use ");
			a2 = claim_element(span1_nodes, "A", { href: true });
			var a2_nodes = children(a2);
			t7 = claim_text(a2_nodes, "TypeScript");
			a2_nodes.forEach(detach_dev);
			t8 = claim_text(span1_nodes, " run:");
			span1_nodes.forEach(detach_dev);
			t9 = claim_text(pre_nodes, "\n");
			span2 = claim_element(pre_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t10 = claim_text(span2_nodes, "# node scripts/setupTypeScript.js");
			span2_nodes.forEach(detach_dev);
			t11 = claim_text(pre_nodes, "\n\nnpm install\nnpm run dev");
			pre_nodes.forEach(detach_dev);
			t12 = claim_space(div_nodes);
			p0 = claim_element(div_nodes, "P", { style: true });
			var p0_nodes = children(p0);
			t13 = claim_text(p0_nodes, "See the ");
			a3 = claim_element(p0_nodes, "A", { href: true });
			var a3_nodes = children(a3);
			t14 = claim_text(a3_nodes, "quickstart guide");
			a3_nodes.forEach(detach_dev);
			t15 = claim_text(p0_nodes, " for more information.");
			p0_nodes.forEach(detach_dev);
			t16 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			a4 = claim_element(p1_nodes, "A", { rel: true, href: true });
			var a4_nodes = children(a4);
			t17 = claim_text(a4_nodes, "Learn Svelte");
			a4_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a0, "href", "https://github.com/sveltejs/template");
			set_style(a0, "user-select", "initial");
			add_location(a0, file$8, 76, 10, 2685);
			attr_dev(a1, "href", "https://github.com/sveltejs/template/archive/master.zip");
			add_location(a1, file$8, 77, 54, 2856);
			attr_dev(span0, "class", "token comment");
			add_location(span0, file$8, 77, 0, 2802);
			attr_dev(a2, "href", "blog/svelte-and-typescript");
			add_location(a2, file$8, 79, 37, 3006);
			attr_dev(span1, "class", "token comment");
			add_location(span1, file$8, 79, 0, 2969);
			attr_dev(span2, "class", "token comment");
			add_location(span2, file$8, 80, 0, 3070);
			attr_dev(pre, "class", "language-bash");
			set_style(pre, "margin", "0 0 1em 0");
			set_style(pre, "min-width", "0");
			set_style(pre, "min-height", "0");
			add_location(pre, file$8, 75, 2, 2592);
			attr_dev(a3, "href", "blog/the-easiest-way-to-get-started");
			add_location(a3, file$8, 86, 29, 3203);
			set_style(p0, "flex", "1");
			add_location(p0, file$8, 86, 2, 3176);
			attr_dev(a4, "rel", "prefetch");
			attr_dev(a4, "href", "tutorial");
			add_location(a4, file$8, 88, 17, 3314);
			attr_dev(p1, "class", "cta");
			add_location(p1, file$8, 88, 2, 3299);
			set_style(div, "grid-area", "start");
			set_style(div, "display", "flex");
			set_style(div, "flex-direction", "column");
			set_style(div, "min-width", "0");
			attr_dev(div, "slot", "how");
			add_location(div, file$8, 74, 1, 2495);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, pre);
			append_dev(pre, t0);
			append_dev(pre, a0);
			append_dev(a0, t1);
			append_dev(pre, t2);
			append_dev(pre, span0);
			append_dev(span0, t3);
			append_dev(span0, a1);
			append_dev(a1, t4);
			append_dev(pre, t5);
			append_dev(pre, span1);
			append_dev(span1, t6);
			append_dev(span1, a2);
			append_dev(a2, t7);
			append_dev(span1, t8);
			append_dev(pre, t9);
			append_dev(pre, span2);
			append_dev(span2, t10);
			append_dev(pre, t11);
			append_dev(div, t12);
			append_dev(div, p0);
			append_dev(p0, t13);
			append_dev(p0, a3);
			append_dev(a3, t14);
			append_dev(p0, t15);
			append_dev(div, t16);
			append_dev(div, p1);
			append_dev(p1, a4);
			append_dev(a4, t17);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_how_slot.name,
		type: "slot",
		source: "(75:1) <div style=\\\"grid-area: start; display: flex; flex-direction: column; min-width: 0\\\" slot=\\\"how\\\">",
		ctx
	});

	return block;
}

// (45:0) <Blurb>
function create_default_slot_6(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;

	const block = {
		c: function create() {
			t0 = space();
			t1 = space();
			t2 = space();
			t3 = space();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			t1 = claim_space(nodes);
			t2 = claim_space(nodes);
			t3 = claim_space(nodes);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, t3, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(t3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_6.name,
		type: "slot",
		source: "(45:0) <Blurb>",
		ctx
	});

	return block;
}

// (94:1) <Example id="hello-world">
function create_default_slot_5(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Svelte components are built on top of HTML. Just add data.");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Svelte components are built on top of HTML. Just add data.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$8, 94, 2, 3440);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_5.name,
		type: "slot",
		source: "(94:1) <Example id=\\\"hello-world\\\">",
		ctx
	});

	return block;
}

// (98:1) <Example id="nested-components">
function create_default_slot_4(ctx) {
	let p;
	let t0;
	let a;
	let t1;
	let t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("CSS is component-scoped by default — no more style collisions or specificity wars. Or you can ");
			a = element("a");
			t1 = text("use your favourite CSS-in-JS library");
			t2 = text(".");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, "CSS is component-scoped by default — no more style collisions or specificity wars. Or you can ");
			a = claim_element(p_nodes, "A", { href: true });
			var a_nodes = children(a);
			t1 = claim_text(a_nodes, "use your favourite CSS-in-JS library");
			a_nodes.forEach(detach_dev);
			t2 = claim_text(p_nodes, ".");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "href", "/blog/svelte-css-in-js");
			add_location(a, file$8, 98, 99, 3652);
			add_location(p, file$8, 98, 2, 3555);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, a);
			append_dev(a, t1);
			append_dev(p, t2);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(98:1) <Example id=\\\"nested-components\\\">",
		ctx
	});

	return block;
}

// (102:1) <Example id="reactive-assignments">
function create_default_slot_3(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Trigger efficient, granular updates by assigning to local variables. The compiler does the rest.");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Trigger efficient, granular updates by assigning to local variables. The compiler does the rest.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$8, 102, 2, 3783);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(102:1) <Example id=\\\"reactive-assignments\\\">",
		ctx
	});

	return block;
}

// (106:1) <Example id="svg-transitions">
function create_default_slot_2(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Build beautiful UIs with a powerful, performant transition engine built right into the framework.");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Build beautiful UIs with a powerful, performant transition engine built right into the framework.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$8, 106, 2, 3934);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(106:1) <Example id=\\\"svg-transitions\\\">",
		ctx
	});

	return block;
}

// (111:0) <Section>
function create_default_slot_1$1(ctx) {
	let h3;
	let t0;
	let t1;
	let whosusingsvelte;
	let current;
	whosusingsvelte = new WhosUsingSvelte({ $$inline: true });

	const block = {
		c: function create() {
			h3 = element("h3");
			t0 = text("Who's using Svelte?");
			t1 = space();
			create_component(whosusingsvelte.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "Who's using Svelte?");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			claim_component(whosusingsvelte.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(h3, file$8, 111, 1, 4070);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t0);
			insert_dev(target, t1, anchor);
			mount_component(whosusingsvelte, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(whosusingsvelte.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(whosusingsvelte.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h3);
			if (detaching) detach_dev(t1);
			destroy_component(whosusingsvelte, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1$1.name,
		type: "slot",
		source: "(111:0) <Section>",
		ctx
	});

	return block;
}

// (117:0) <Section>
function create_default_slot$2(ctx) {
	let h3;
	let t0;
	let t1;
	let p;
	let t2;
	let a;
	let t3;
	let t4;
	let contributors;
	let current;
	contributors = new Contributors({ $$inline: true });

	const block = {
		c: function create() {
			h3 = element("h3");
			t0 = text("Contributors");
			t1 = space();
			p = element("p");
			t2 = text("Svelte is free and open source software, made possible by the work of dozens of volunteers. ");
			a = element("a");
			t3 = text("Join us!");
			t4 = space();
			create_component(contributors.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "Contributors");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Svelte is free and open source software, made possible by the work of dozens of volunteers. ");
			a = claim_element(p_nodes, "A", { href: true });
			var a_nodes = children(a);
			t3 = claim_text(a_nodes, "Join us!");
			a_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			claim_component(contributors.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(h3, file$8, 117, 1, 4143);
			attr_dev(a, "href", "https://github.com/sveltejs/svelte");
			add_location(a, file$8, 119, 96, 4262);
			add_location(p, file$8, 119, 1, 4167);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t2);
			append_dev(p, a);
			append_dev(a, t3);
			insert_dev(target, t4, anchor);
			mount_component(contributors, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(contributors.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(contributors.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h3);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p);
			if (detaching) detach_dev(t4);
			destroy_component(contributors, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$2.name,
		type: "slot",
		source: "(117:0) <Section>",
		ctx
	});

	return block;
}

function create_fragment$8(ctx) {
	let meta0;
	let meta1;
	let meta2;
	let t0;
	let h1;
	let t1;
	let t2;
	let hero;
	let t3;
	let blurb;
	let t4;
	let div;
	let example0;
	let t5;
	let example1;
	let t6;
	let example2;
	let t7;
	let example3;
	let t8;
	let section0;
	let t9;
	let section1;
	let current;

	hero = new Hero({
			props: {
				title: "Svelte",
				tagline: "Cybernetically enhanced web apps",
				outline: "svelte-logo-outline.svg",
				logotype: "svelte-logotype.svg"
			},
			$$inline: true
		});

	blurb = new Blurb({
			props: {
				$$slots: {
					default: [create_default_slot_6],
					how: [create_how_slot],
					what: [create_what_slot],
					three: [create_three_slot],
					two: [create_two_slot],
					one: [create_one_slot]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	example0 = new Example({
			props: {
				id: "hello-world",
				$$slots: { default: [create_default_slot_5] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	example1 = new Example({
			props: {
				id: "nested-components",
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	example2 = new Example({
			props: {
				id: "reactive-assignments",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	example3 = new Example({
			props: {
				id: "svg-transitions",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	section0 = new Section({
			props: {
				$$slots: { default: [create_default_slot_1$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	section1 = new Section({
			props: {
				$$slots: { default: [create_default_slot$2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			meta0 = element("meta");
			meta1 = element("meta");
			meta2 = element("meta");
			t0 = space();
			h1 = element("h1");
			t1 = text("Svelte");
			t2 = space();
			create_component(hero.$$.fragment);
			t3 = space();
			create_component(blurb.$$.fragment);
			t4 = space();
			div = element("div");
			create_component(example0.$$.fragment);
			t5 = space();
			create_component(example1.$$.fragment);
			t6 = space();
			create_component(example2.$$.fragment);
			t7 = space();
			create_component(example3.$$.fragment);
			t8 = space();
			create_component(section0.$$.fragment);
			t9 = space();
			create_component(section1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-wry75o\"]", document.head);
			meta0 = claim_element(head_nodes, "META", { name: true, content: true });
			meta1 = claim_element(head_nodes, "META", { name: true, content: true });
			meta2 = claim_element(head_nodes, "META", { name: true, content: true });
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Svelte");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			claim_component(hero.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(blurb.$$.fragment, nodes);
			t4 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			claim_component(example0.$$.fragment, div_nodes);
			t5 = claim_space(div_nodes);
			claim_component(example1.$$.fragment, div_nodes);
			t6 = claim_space(div_nodes);
			claim_component(example2.$$.fragment, div_nodes);
			t7 = claim_space(div_nodes);
			claim_component(example3.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			t8 = claim_space(nodes);
			claim_component(section0.$$.fragment, nodes);
			t9 = claim_space(nodes);
			claim_component(section1.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Svelte • Cybernetically enhanced web apps";
			attr_dev(meta0, "name", "twitter:title");
			attr_dev(meta0, "content", "Svelte");
			add_location(meta0, file$8, 31, 1, 820);
			attr_dev(meta1, "name", "twitter:description");
			attr_dev(meta1, "content", "Cybernetically enhanced web apps");
			add_location(meta1, file$8, 32, 1, 866);
			attr_dev(meta2, "name", "Description");
			attr_dev(meta2, "content", "Cybernetically enhanced web apps");
			add_location(meta2, file$8, 33, 1, 944);
			attr_dev(h1, "class", "visually-hidden");
			add_location(h1, file$8, 36, 0, 1029);
			attr_dev(div, "class", "examples svelte-4powvv");
			add_location(div, file$8, 92, 0, 3387);
		},
		m: function mount(target, anchor) {
			append_dev(document.head, meta0);
			append_dev(document.head, meta1);
			append_dev(document.head, meta2);
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			mount_component(hero, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(blurb, target, anchor);
			insert_dev(target, t4, anchor);
			insert_dev(target, div, anchor);
			mount_component(example0, div, null);
			append_dev(div, t5);
			mount_component(example1, div, null);
			append_dev(div, t6);
			mount_component(example2, div, null);
			append_dev(div, t7);
			mount_component(example3, div, null);
			insert_dev(target, t8, anchor);
			mount_component(section0, target, anchor);
			insert_dev(target, t9, anchor);
			mount_component(section1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const blurb_changes = {};

			if (dirty & /*$$scope*/ 1) {
				blurb_changes.$$scope = { dirty, ctx };
			}

			blurb.$set(blurb_changes);
			const example0_changes = {};

			if (dirty & /*$$scope*/ 1) {
				example0_changes.$$scope = { dirty, ctx };
			}

			example0.$set(example0_changes);
			const example1_changes = {};

			if (dirty & /*$$scope*/ 1) {
				example1_changes.$$scope = { dirty, ctx };
			}

			example1.$set(example1_changes);
			const example2_changes = {};

			if (dirty & /*$$scope*/ 1) {
				example2_changes.$$scope = { dirty, ctx };
			}

			example2.$set(example2_changes);
			const example3_changes = {};

			if (dirty & /*$$scope*/ 1) {
				example3_changes.$$scope = { dirty, ctx };
			}

			example3.$set(example3_changes);
			const section0_changes = {};

			if (dirty & /*$$scope*/ 1) {
				section0_changes.$$scope = { dirty, ctx };
			}

			section0.$set(section0_changes);
			const section1_changes = {};

			if (dirty & /*$$scope*/ 1) {
				section1_changes.$$scope = { dirty, ctx };
			}

			section1.$set(section1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(hero.$$.fragment, local);
			transition_in(blurb.$$.fragment, local);
			transition_in(example0.$$.fragment, local);
			transition_in(example1.$$.fragment, local);
			transition_in(example2.$$.fragment, local);
			transition_in(example3.$$.fragment, local);
			transition_in(section0.$$.fragment, local);
			transition_in(section1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(hero.$$.fragment, local);
			transition_out(blurb.$$.fragment, local);
			transition_out(example0.$$.fragment, local);
			transition_out(example1.$$.fragment, local);
			transition_out(example2.$$.fragment, local);
			transition_out(example3.$$.fragment, local);
			transition_out(section0.$$.fragment, local);
			transition_out(section1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			detach_dev(meta0);
			detach_dev(meta1);
			detach_dev(meta2);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			destroy_component(hero, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(blurb, detaching);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div);
			destroy_component(example0);
			destroy_component(example1);
			destroy_component(example2);
			destroy_component(example3);
			if (detaching) detach_dev(t8);
			destroy_component(section0, detaching);
			if (detaching) detach_dev(t9);
			destroy_component(section1, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		Blurb,
		Hero,
		Section,
		Contributors,
		Example,
		WhosUsingSvelte
	});

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$8.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
